plugins {
	id("com.github.johnrengelman.shadow") version "6.1.0"
	id("io.micronaut.application") version "1.5.0"
	id("com.diffplug.spotless") version "5.12.4"
}

version = "0.1"
group = "kurush"

repositories {
	mavenCentral()
	jcenter()
}

micronaut {
	runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("kurush.*")
	}
}

spotless {
	java {
		importOrder()
		removeUnusedImports()
		eclipse().configFile("spotless.xml")
	}
	groovyGradle {
		target "*.gradle"
		greclipse()
	}
}

dependencies {
	annotationProcessor("io.micronaut.data:micronaut-data-processor")
	annotationProcessor("io.micronaut.security:micronaut-security-annotations")
	compileOnly("org.graalvm.nativeimage:svm")
	implementation("io.micronaut:micronaut-validation")
	implementation("io.micronaut:micronaut-runtime")
	implementation("javax.annotation:javax.annotation-api")
	implementation("io.micronaut:micronaut-http-client")
	implementation("io.micronaut:micronaut-management")
	implementation("io.micronaut.flyway:micronaut-flyway")
	implementation("io.micronaut.sql:micronaut-jdbc-hikari")
	implementation("io.micronaut.data:micronaut-data-jdbc")
	implementation("io.micronaut.security:micronaut-security-session")
	implementation("io.micronaut.views:micronaut-views-pebble")
	runtimeOnly("ch.qos.logback:logback-classic")
	runtimeOnly("org.postgresql:postgresql")
	testImplementation("org.testcontainers:testcontainers")
	testImplementation("org.testcontainers:junit-jupiter")
	testImplementation("org.testcontainers:postgresql")
	testImplementation("net.java.dev.jna:jna:5.8.0")
}

application {
	mainClass.set("kurush.Application")
}

java {
	sourceCompatibility = JavaVersion.toVersion("11")
	targetCompatibility = JavaVersion.toVersion("11")
}
